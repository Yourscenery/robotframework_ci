*** Settings ***
Resource          ../9ShareResource.txt

*** Variables ***
${doorTableName}    t_door_ctrl_dev    # 数据库中门禁的表名
&{door apikey and dbkey}    projectId=project_id    areaId=area_id    acsdevname=acs_dev_name    acsdevindexcode=acs_dev_index_code    acsdevip=acs_dev_ip    acsdevport=acs_dev_port    acsdevtypecode=acs_dev_type_code
...               devUsername=dev_username    devPassword=dev_password    remark=remark    id=id    ##接口请求参数=数据库字段名，用户接口内容与数据库内容断言
${ADD_DOOR_SUCCESS}    新增门禁设备成功
${UPDATE_DOOR_SUCCESS}    修改门禁设备
${DELETE_DOOR_SUCCESS}    删除门禁设备

*** Keywords ***
door_edit_add
    [Arguments]    ${dicParams}    ${message}=${ADD_DOOR_SUCCESS}    ${returnKey}=${none}
    [Documentation]    接口没返回门禁id；接口返回{"success":true,"message":"新增门禁设备成功","object":null}${returnKey}=object.acsdevindexcode
    ${url}    set variable    /door/doorCtrlDev
    ${dicAssert}    create dictionary    message=${message}
    ${dicResp}    http_post_return    ${url}    ${dicParams}    ${dicAssert}    ${returnKey}
    #接口没返回门禁id，数据库获取doorid
    ${tableWhereStatement}    set variable    area_id='${dicParams}[areaId]' and acs_dev_name='${dicParams}[acsdevname]' and acs_dev_index_code='${dicParams}[acsdevindexcode]' and acs_dev_type_code='${dicParams}[acsdevtypecode]'
    ${sqlDoorId}=    run keyword if    '${message}'=='${ADD_DOOR_SUCCESS}'    db_open_query_close    SELECT acs_dev_index_code FROM ${doorTableName} where ${tableWhereStatement}
    ${lenSqlDoorId}=    run keyword if    '${message}'=='${ADD_DOOR_SUCCESS}'    get length    ${sqlDoorId}
    ${doorId}=    run keyword if    '${message}'=='${ADD_DOOR_SUCCESS}' and '${lenSqlDoorId}'!='1'    fail    【数据库获取新增门禁id数量不等于1---${sqlDoorId}】
    ...    ELSE IF    '${lenSqlDoorId}'=='1'    set variable    ${sqlDoorId[0][0]}
    #数据库断言；
    #获取每列的值拼接作为where语句
    ${tableFromWhere}    set variable    ${doorTableName} WHERE acs_dev_index_code='${dicParams}[acsdevindexcode]' and area_id='${dicParams}[areaId]' and acs_dev_name='${dicParams}[acsdevname]' and acs_dev_type_code='${dicParams}[acsdevtypecode]'
    run keyword if    '${doorId}'!='${none}' and '${message}'=='${ADD_DOOR_SUCCESS}'    assert_response_database_add_or_update    ${door apikey and dbkey}    ${dicParams}    ${tableFromWhere}
    ...    ELSE    log    【没新增成功不走数据库断言】
    [Return]    ${doorId}

door_edit_add_oneData
    [Arguments]    ${mark}=a
    [Documentation]    固定数据新增一条门禁数据，用于更新、删除接口使用; 接口没返回灯杆id
    log    ---新增一条门禁数据并获取其id---
    ${time}=    get_time_no_year
    ${doorProperty}=    door_edit_property_list
    ${dictdataCode}    ${dictdataValue}    split string    ${doorProperty}    ,
    ${dicParams}    create dictionary    projectId=${G_PROJECT_ID}    areaId=${G_AREA_ID}    acsdevname=o${mark}门${time}    acsdevindexcode=o${mark}${time}    acsdevtypedesc=型号
    ...    acsdevport=23    acsdevip=192.68.2.2    acsdevtypecode=${dictdataCode}    acsdevtypename=${dictdataValue}    devUsername=admin    devPassword=123456
    ...    remark=o${mark}门${time}
    ${doorId}=    door_edit_add    ${dicParams}
    [Return]    ${doorId}

door_edit_query
    [Arguments]    ${dicParams}    ${total}=0    ${returnKey}=records
    ${url}    set variable    /door/doorCtrlDev/page
    ${dicAssert}    create dictionary    total=${total}
    ${respKeyVal}    http_post_return    ${url}    ${dicParams}    ${dicAssert}    ${returnKey}
    ${lenRespKeyVal}    get length    ${respKeyVal}
    #获取第一行数据id
    ${doorId}=    run keyword if    ${lenRespKeyVal}>0    set variable    ${respKeyVal}[0][id]
    ...    ELSE    set variable    ${None}    #数据库断言------获取每列的值拼接作为where语句    #${tableWhereStatement}    set variable
    ...    # id in (${doorId})    #run keyword if    ${lenRespKeyVal}>0    assert_response_database_query    ${door apikey and dbkey}    ${respKeyVal}
    ...    # ${doorTableName}    id    # ELSE    log    【没查询数据不走数据库断言】
    [Return]    ${doorId}

door_edit_pageCondition
    [Arguments]    ${dicParams}    ${total}=0    ${returnKey}=records
    ${url}    set variable    /door/doorCtrlDev/page-condition
    ${dicAssert}    create dictionary    total=${total}
    ${respKeyVal}    http_post_return    ${url}    ${dicParams}    ${dicAssert}    ${returnKey}
    ${lenRespKeyVal}    get length    ${respKeyVal}
    #获取第一行数据id
    ${doorId}=    run keyword if    ${lenRespKeyVal}>0    set variable    ${respKeyVal}[0][id]
    ...    ELSE    set variable    ${None}    #数据库断言------获取每列的值拼接作为where语句    #${tableWhereStatement}    set variable
    ...    # id in (${doorId})    #run keyword if    #${lenRespKeyVal}>0    assert_response_database_query    ${door apikey and dbkey}    ${respKeyVal}
    ...    # ${doorTableName}    id    #ELSE    log    【没查询数据不走数据库断言】
    [Return]    ${doorId}

door_edit_update
    [Arguments]    ${dicParams}    ${message}=${UPDATE_DOOR_SUCCESS}    ${returnKey}=object.acsdevindexcode
    ${url}    set variable    /door/doorCtrlDev
    ${dicAssert}    create dictionary    message=${message}
    ${updateDoorID}    http_put_return    ${url}    ${dicParams}    ${dicAssert}    ${returnKey}
    #数据库断言
    #获取每列的值拼接作为where语句
    ${tableFromWhere}    set variable    ${doorTableName} WHERE acs_dev_index_code='${dicParams}[acsdevindexcode]' and area_id='${dicParams}[areaId]' and acs_dev_name='${dicParams}[acsdevname]' and acs_dev_type_code='${dicParams}[acsdevtypecode]'
    run keyword if    '${updateDoorID}'!='${none}' and '${message}'=='${UPDATE_DOOR_SUCCESS}'    assert_response_database_add_or_update    ${door apikey and dbkey}    ${dicParams}    ${tableFromWhere}
    ...    ELSE    log    【没修改成功不走数据库断言】
    [Return]    ${updateDoorID}

door_edit_delete
    [Arguments]    ${dicParams}    ${message}=${DELETE_DOOR_SUCCESS}
    ${url}    set variable    /door/doorCtrlDev
    ${dicAssert}    create dictionary    message=${message}
    http_delete    ${url}    ${dicParams}    ${dicAssert}
    #数据库断言
    ${ids}    get from dictionary    ${dicParams}    ids[]
    ${tableSelectFrom}    set variable    select acs_dev_index_code,deleted from ${doorTableName}
    log    '${ids}'!='${none}'-- '${message}'=='${DELETE_DOOR_SUCCESS}'
    run keyword if    '${ids}'!='${none}' and '${ids}'!='${empty}' and '${message}'=='${DELETE_DOOR_SUCCESS}'    assert_response_database_delete    ${tableSelectFrom}    acs_dev_index_code    ${ids}
    ...    ELSE    log    【没删除成功不走数据库断言】

door_edit_property_list
    [Arguments]    ${num}=0
    ${dicParams}    create dictionary    dictCode=dict.door.devtype
    ${url}    set variable    /common/dict/list
    ${dicAssert}    create dictionary    success=True
    ${returnKey}    set variable    object
    ${respKeyVal}    http_post_return    ${url}    ${dicParams}    ${dicAssert}    ${returnKey}
    ${lenRespKeyVal}    get length    ${respKeyVal}
    ${doorProperty}    set variable if    ${lenRespKeyVal}<1    ${None}    ${respKeyVal}[${num}][dictdataCode],${respKeyVal}[${num}][dictdataValue]
    [Return]    ${doorProperty}





door_overview_countByUser
    [Arguments]    ${success}=True    ${returnKey}=object
    [Documentation]    设备总览-门禁在离线统计
    ${url}    set variable    /door/doorCtrlDev/countByUser
    ${dicAssert}    create dictionary    success=${success}
    ${respKeyVal}    http_post_return    ${url}    ${none}    ${dicAssert}    ${returnKey}
    log    ***${respKeyVal}[onlineNum]在线；${respKeyVal}[offlineNum]离线；
    [Return]    ${respKeyVal}

door_overview_pagecondition
    [Arguments]    ${dicParams}    ${total}=0    ${returnKey}=records
    [Documentation]    设备总览-门禁列表
    ${url}    set variable    /door/doorCtrlDev/page-condition
    ${dicAssert}    create dictionary    total=${total}
    ${respKeyVal}    http_post_return    ${url}    ${dicParams}    ${dicAssert}    ${returnKey}
    ${lenRespKeyVal}    get length    ${respKeyVal}
    #获取第一行数据id
    ${doorId}=    run keyword if    ${lenRespKeyVal}>0    set variable    ${respKeyVal}[0][id]
    ...    ELSE    set variable    ${None}
    [Return]    ${doorId}
